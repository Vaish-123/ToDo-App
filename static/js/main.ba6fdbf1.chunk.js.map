{"version":3,"sources":["App.js","index.js"],"names":["App","useState","add","setAdd","idle","setIdle","del","setDel","comp","setComp","className","class","value","onChange","e","target","type","placeholder","onClick","text","status","map","obj","index","temp","i","taskCompleted","checked","filter","dlt","notCompleted","id","htmlFor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAmGeA,MAhGf,WACE,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KA6BA,OACE,gCACE,iCACE,4CAEF,kCACE,gCACE,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mBAAGC,MAAM,eACT,uBAAOC,MAAOR,EAAMS,SAAU,SAACC,GAAD,OAAOT,EAAQS,EAAEC,OAAOH,QAAQI,KAAK,OAAOC,YAAY,eACtF,mBAAGC,QAAS,WAAQf,EAAO,GAAD,mBAAKD,GAAL,CAAU,CAAEiB,KAAMf,EAAMgB,QAAQ,MAAWf,EAAQ,KAAOM,MAAM,8BAG9F,sBAAKD,UAAU,iBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,iDAEEJ,EAAIe,KAAI,SAACC,GACP,OACE,qBAAKZ,UAAU,OAAf,SACE,4BAAIY,EAAIH,eAMlB,sBAAKT,UAAU,cAAf,UACE,mDAEER,EAAImB,KAAI,SAACC,EAAKC,GACZ,IAAmB,IAAfD,EAAIF,OACN,OACE,sBAAKV,UAAU,OAAf,UACE,uBAAOA,UAAU,YAAYQ,QAAS,YArDtC,SAACK,GACrB,IAAIC,EAAOtB,EAAImB,KAAI,SAACC,EAAKG,GACvB,OAAIF,IAAUE,GACZhB,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAAEW,KAAMG,EAAIH,KAAMC,QAAQ,MACpC,IAEHE,KAETnB,EAAOqB,GA6C2DE,CAAcH,IAAUP,KAAK,WAAWW,QAASL,EAAIF,SAClGE,EAAIH,KACL,mBAAGD,QAAS,YA/DtB,SAACK,GACX,IAAIC,EAAOtB,EAAI0B,QAAO,SAACN,EAAKG,GAC1B,GAAIF,IAAUE,EAAG,OAAOH,EACnBf,EAAO,GAAD,mBAAKD,GAAL,CAAUgB,QAEvBnB,EAAOqB,GA0DiCK,CAAIN,IAAUZ,MAAM,wCAOpD,sBAAKD,UAAU,YAAf,UACE,mDAEEF,EAAKa,KAAI,SAACC,EAAKC,GACb,OACE,sBAAKb,UAAU,OAAf,UACE,uBAAOQ,QAAS,YAzDf,SAACK,GACpB,IAAIC,EAAOhB,EAAKoB,QAAO,SAACN,EAAKG,GAC3B,GAAIF,IAAUE,EACT,OAAQH,EADInB,EAAO,GAAD,mBAAKD,GAAL,CAAU,CAAEiB,KAAMG,EAAIH,KAAMC,QAAQ,SAG7DX,EAAQe,GAoDkCM,CAAaP,IAAUP,KAAK,WAAWe,GAAG,OAAOJ,QAASL,EAAIF,SACtF,uBAAOY,QAAQ,OAAf,SAAuBV,EAAIH,4BClFjDc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba6fdbf1.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [add, setAdd] = useState([]);\r\n  const [idle, setIdle] = useState('');\r\n  const [del, setDel] = useState([]);\r\n  const [comp, setComp] = useState([]);\r\n\r\n  const dlt = (index) => {\r\n    var temp = add.filter((obj, i) => {\r\n      if (index !== i) return obj\r\n      else setDel([...del, obj])\r\n    });\r\n    setAdd(temp);\r\n  }\r\n\r\n  const taskCompleted = (index) => {\r\n    var temp = add.map((obj, i) => {\r\n      if (index === i) {\r\n        setComp([...comp, { text: obj.text, status: true }]);\r\n        return ({});\r\n      }\r\n      return obj;\r\n    });\r\n    setAdd(temp);\r\n  }\r\n\r\n  const notCompleted = (index) => {\r\n    var temp = comp.filter((obj, i) => {\r\n      if (index === i) setAdd([...add, { text: obj.text, status: false }]);\r\n      else return (obj);\r\n    });\r\n    setComp(temp);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>ToDo App</h1>\r\n      </header>\r\n      <section>\r\n        <div>\r\n          <div className='input-section'>\r\n            <div className='taskInput'>\r\n              <i class=\"fas fa-pen\"></i>\r\n              <input value={idle} onChange={(e) => setIdle(e.target.value)} type=\"text\" placeholder='What next?' />\r\n              <i onClick={() => { setAdd([...add, { text: idle, status: false }]); setIdle('') }} class=\"fas fa-plus plusIcon\"></i>\r\n            </div>\r\n          </div>\r\n          <div className='flex-container'>\r\n            <div className='task-del'>\r\n              <h2>Deleted Tasks :</h2>\r\n              {\r\n                del.map((obj) => {\r\n                  return (\r\n                    <div className='box1'>\r\n                      <p>{obj.text}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n            <div className='task-toComp'>\r\n              <h2>To be completed :</h2>\r\n              {\r\n                add.map((obj, index) => {\r\n                  if (obj.status === false) {\r\n                    return (\r\n                      <div className='box2'>\r\n                        <input className='toCompChk' onClick={() => { taskCompleted(index) }} type=\"checkbox\" checked={obj.status} />\r\n                        {obj.text}\r\n                        <i onClick={() => { dlt(index) }} class=\"fas fa-trash-alt toCompDel\"></i>\r\n                      </div>\r\n                    )\r\n                  }\r\n                })\r\n              }\r\n            </div>\r\n            <div className='task-comp'>\r\n              <h2>Completed Tasks :</h2>\r\n              {\r\n                comp.map((obj, index) => {\r\n                  return (\r\n                    <div className='box3'>\r\n                      <input onClick={() => { notCompleted(index) }} type=\"checkbox\" id='box3' checked={obj.status} />\r\n                      <label htmlFor=\"box3\">{obj.text}</label>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}